JAR Code analysis with the help of Machine Learning

19-05-2019

- Files Meta_data.py and Download_Jar.py updated
- As of now category data can be fetched via Get_Category.py and stored in an excel file
- Meta_data.py can display meta data (category,tags,usage etc) for a library
- Download_Jar.py fetches the download url for each file (though accessing it has to be resolved. Downloading jar file to be implemented.) 

20-05-2019
- Download_Jar.py now downloads the jar files from the repository (md5 sha2 and pom file excluded).

21-05-2019
- Files are downloaded into seperate directories (for classifiying into different categories).

24-05-2019
- Extract_Class_Info.py added which is able to extract qualified class names. Further decompiled info extraction will be added

28-05-2019
- Extract_Class_Info.py now gives class names alongwith decompiled class code and class file structure. To use it first uncomment makedirs and first subprocess command (to create and unzip jars to appropriate folders). Then run the program to obtain the information. The information can optionally be stored in a file (using >> filename.ext if on command line). Appropriate renaming of main directory should be done.

03-06-2019
- Output from Extract_Class_Info.py refined to give JVM instructions , line tables and Class names(alongwith methods) only. Command line arguments are to be used to specify storage file(txt,csv as of now) and flag to remove comments from produced code(stored in seperate file)
- Get_Category.py now stores fetched category info in a tuple ( name, library count, url to category).

04-06-2019
- Meta data.py now retrieves meta data regarding each library of each category and stores them in an xlsx format file. This program requires data fetched using Get_Category.py 
- Need to deal with varying number of pages in each category.(Until now 10 pages assumed per category)
- Seperation of tags and licenses via delimiters to be added

06-06-2019
- Meta_data.py updated to handle cases where usage of library was not given. Also comments have been redone to give better explanation of the code
- Separation of tag data still remains to be handled.
